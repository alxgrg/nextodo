// import { authOptions } from './api/auth/[...nextauth]';
// import { unstable_getServerSession } from 'next-auth/next';
// import { prisma } from '../helpers/db';

// import Head from 'next/head';
// import Todo from '../components/Todo';

// export default function Home(props) {
//   return (
//     <>
//       <Head>
//         <title>Nextodo!</title>
//         <meta name='description' content='Generated by create next app' />
//         <link rel='icon' href='/favicon.ico' />
//       </Head>
//       <Todo todos={props.todos} />
//     </>
//   );
// }

// export async function getServerSideProps({ req, res }) {
//   const session = await unstable_getServerSession(req, res, authOptions);

//   if (!session) {
//     return {
//       props: {
//         todos: [],
//       },
//     };
//   }

//   const currentUser = await prisma.user.findFirst({
//     where: { email: session.user.email },
//   });

//   const currentUserId = currentUser.id;

//   const todos = await prisma.todo.findMany({
//     orderBy: [
//       {
//         createdAt: 'desc',
//       },
//     ],
//     where: { userId: currentUserId },
//   });

//   return {
//     props: {
//       todos: JSON.parse(JSON.stringify(todos)),
//     },
//   };
// }

import { authOptions } from './api/auth/[...nextauth]';
import { unstable_getServerSession } from 'next-auth/next';
import { signIn } from 'next-auth/react';

import Head from 'next/head';
import HeroIcon from '../assets/icons/HeroIcon';

export default function Home(props) {
  return (
    <>
      <Head>
        <title>Nextodo!</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <div className='flex flex-col bg-slate-600 p-8 items-center text-white h-screen pt-40'>
        <div className='p-3' />
        <div className='flex flex-col text-center'>
          <div className='w-full'>
            <HeroIcon />
          </div>

          <div className='p-3' />
          <p>
            <button
              className='p-3 rounded bg-orange-600'
              onClick={() => signIn()}
            >
              Sign in
            </button>{' '}
            to start a list.
          </p>
        </div>
      </div>
    </>
  );
}

export async function getServerSideProps({ req, res }) {
  const session = await unstable_getServerSession(req, res, authOptions);

  if (session) {
    return {
      redirect: {
        destination: '/todo',
        permanent: false,
      },
    };
  }

  return {
    props: {},
  };
}
